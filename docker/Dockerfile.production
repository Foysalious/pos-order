FROM php:8.0.2-fpm

ARG APP_ENV

ENV PHP_OPCACHE_VALIDATE_TIMESTAMPS="0" \
    PHP_OPCACHE_MAX_ACCELERATED_FILES="10000" \
    PHP_OPCACHE_MEMORY_CONSUMPTION="192" \
    PHP_OPCACHE_MAX_WASTED_PERCENTAGE="10"

# PHP_CPPFLAGS are used by the docker-php-ext-* scripts
ENV PHP_CPPFLAGS="$PHP_CPPFLAGS -std=c++11"

# Install dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    libpng-dev \
    zlib1g-dev \
    libsasl2-dev \
    libssl-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    libpng-dev \
    libxpm-dev \
    libvpx-dev \
    libxml2-dev \
    libicu-dev \
    libonig-dev \
    libzip-dev \
    git \
    unzip \
    supervisor

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install extensions
RUN docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/
RUN docker-php-ext-configure intl
RUN docker-php-ext-install -j$(nproc) pdo_mysql mbstring zip calendar soap gd intl opcache pcntl

# Install mongodb extension
RUN pecl install mongodb && docker-php-ext-enable mongodb

# Install php-ext-apfd
RUN pecl install apfd && docker-php-ext-enable apfd

# Install sentry
RUN curl -sL https://sentry.io/get-cli/ | bash

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy existing application directory permissions
COPY --chown=www-data:www-data . /var/www

COPY ./composer-auth.json /root/.composer/auth.json
COPY ./.sentryclirc .sentryclirc

# PHP configuration
COPY ./docker/php/local.ini /usr/local/etc/php/conf.d/local.ini
# Opcache configuration
COPY ./docker/php/conf.d/opcache.ini /usr/local/etc/php/conf.d/opcache.ini
# PHP-FPM configuration
COPY ./docker/php/conf.d/www.production.conf /usr/local/etc/php-fpm.d/www.conf
# Nginx configuration
COPY ./docker/nginx/conf.d/nginx-prod.conf /etc/nginx/sites-enabled/default

COPY ./docker/entrypoint.sh /etc/entrypoint.sh
RUN chmod +x /etc/entrypoint.sh

# Make fpm log script executable
COPY ./docker/fpm_log_file_created.sh /etc/fpm_log_file_created.sh
RUN chmod +x /etc/fpm_log_file_created.sh
RUN /etc/fpm_log_file_created.sh

RUN chmod -R g+w /var/www/storage
RUN chmod -R g+w /var/www/bootstrap

# Set working directory
WORKDIR /var/www

# Laravel specific file permission
# RUN find ./ -type f -exec chmod 664 {} \;
# RUN find ./ -type d -exec chmod 775 {} \;
# RUN chgrp -R www-data storage bootstrap/cache
# RUN chmod -R ug+rwx storage bootstrap/cache

# Make sentry cli script executable
RUN chmod +x ./bin/sentry_release.sh

RUN composer install --ignore-platform-reqs && rm -rf /home/www-data/.composer/cache

# RUN chmod -R g+w /var/www/vendor

RUN php artisan cache:clear
RUN php artisan config:clear

EXPOSE 80 443

ENTRYPOINT ["/etc/entrypoint.sh"]
